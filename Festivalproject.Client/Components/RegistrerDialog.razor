@using Festivalproject.Shared.Models;
@using Festivalproject.Client.Services;
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@inject IUserService userService; 


<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <h3>Opret dig som bruger</h3>
                @*<EditForm Model="@newUser" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />*@
                <div class="index container">
                    <div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-12 sm:grid-cols-6">
                        <div class="sm:col-span-2">
                            <label for="first-name" class="block text-sm font-medium leading-6 text-gray-900">FirstFF name</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.FirstName" type="text" name="first-name" id="first-name" autocomplete="given-name" class="form-control"/>
                            </div>
                        </div>
                        <div class="sm:col-span-2">
                            <label for="last-name" class="block text-sm font-medium leading-6 text-gray-900">Last name</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.SurName" type="text" name="last-name" id="last-name" autocomplete="family-name" class="form-control"/>
                            </div>
                        </div>

                        <div class="sm:col-span-2">
                            <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Email address</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.Email" id="email" name="email" type="email" autocomplete="email" class="form-control"/>
                            </div>
                        </div>

                        <div class="sm:col-span-2">
                            <label for="phoneNumber" class="block text-sm font-medium leading-6 text-gray-900">Phone Number</label>
                            <div class="mt-2">
                                <InputNumber TValue="int" @bind-Value="newUser.PhoneNumber" id="phoneNumber" name="phoneNumber" type="email" autocomplete="phoneNumber" class="form-control"/>
                            </div>
                        </div>

                        <div class="col-span-3">
                            <label for="street-address" class="block text-sm font-medium leading-6 text-gray-900">Street address</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.Address" type="text" name="street-address" id="street-address" autocomplete="street-address" class="form-control"/>
                            </div>
                        </div>

                        <div class="sm:col-span-2 sm:col-start-1 w-2/3">
                            <label for="city" class="block text-sm font-medium leading-6 text-gray-900">City</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.City" type="text" name="city" id="city" autocomplete="address-level2" class="form-control"/>
                            </div>
                        </div>

                        <div class="sm:col-span-2 w-2/3">
                            <label for="postal-code" class="block text-sm font-medium leading-6 text-gray-900">ZIP / Postal code</label>
                            <div class="mt-2">
                                <InputNumber TValue="int" @bind-Value="newUser.Zip" name="postal-code" id="postal-code" autocomplete="postal-code" class="form-control"/>
                            </div>
                        </div>

                        <div class="sm:col-span-3 w-2/3">
                            <label for="username" class="block text-sm font-medium leading-6 text-gray-900">UserName</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.UserName" type="text" name="username" id="username" autocomplete="postal-code" class="form-control"/>
                            </div>
                        </div>

                        <div class="sm:col-span-3 w-2/3">
                            <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
                            <div class="mt-2">
                                <InputText @bind-Value="newUser.Password" type="text" name="password" id="password" autocomplete="password" class="form-control"/>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
                @*</EditForm>*@


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public User newUser { get; set; } = new();

    private EditContext aEditContext;


    protected void OnInitialized()
    {
        newUser = new User();
        aEditContext = new EditContext(newUser);
    }


    public async Task HandleValidSubmit()
    {
        var result = await userService.CreateUser(newUser);
        newUser = new User();
    }


    public async Task CreateUser(User newUser)
    {
        var result = await userService.CreateUser(newUser);
    }

}