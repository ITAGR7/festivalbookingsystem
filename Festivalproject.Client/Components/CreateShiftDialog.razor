@using Festivalproject.Shared.Models
@using Festivalproject.Client.Services
@using Blazored.Modal.Services

@inject IJSRuntime JSRuntime
@inject IShiftRegistrationService ShiftRegistrationService
@inject IModalService modalService
@inject IShiftService shiftService


<div>
    <ModalContent>
       <p class="text-xl leading-6 text-black-600"> Opret en ny vagt!  </p>
        <EditForm Model="@newShift">
            <DataAnnotationsValidator />
            <div class="index container">
                <div class="mt-16 grid grid-cols-4 gap-x-6 gap-y-12">
                    <div class="sm:col-span-2">
                 
                        <label  class="block text-sm font-medium leading-6 text-gray-900">Vagttype</label>
                        <div class="mt-2">
                            <InputSelect @bind-Value="newShift.Type" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                                <option>Vælg vagt type</option>
                                @foreach (var shiftType in shiftTypes)
                                {
                                    <option value="@shiftType">@shiftType</option>
                                }
                            </InputSelect>                       
                        </div>
                    </div>
                    <div class="sm:col-span-2">
                       
                        <label for="shiftName" class="block text-sm font-medium leading-6 text-gray-900">Funktion/navn</label>
                        <div class="mt-2">
                            <InputSelect @bind-Value="newShift.Name" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                                <option value="">Vælg funktion</option>
                                @foreach (var shiftType in shiftFunctionsAndRoles)
                                {
                                    <option style="font-weight:bolder" disabled>@shiftType.Key</option>
                                    foreach (var role in shiftType.Value)
                                    {
                                        <option>&nbsp;&nbsp;@role</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                    </div>            
                    <div class="sm:col-span-2">
                    
                        <label for="last-name" class="block text-sm font-medium leading-6 text-gray-900">Vagtområde</label>
                        <div class="mt-2">                
                            <InputSelect @bind-Value="newShift.Area" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50">
                                <option value="">Vælg funktion</option>
                                @foreach (var shiftType in areaTypesAndLocations)
                                {
                                    <option style="font-weight:bolder" disabled>@shiftType.Key</option>
                                    foreach (var role in shiftType.Value)
                                    {
                                        <option>&nbsp;&nbsp;@role</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <br />
                    <div class="sm:col-span-2">
                  
                        <label for="startTime" class="block text-sm font-medium leading-6 text-gray-900">Starttidspunkt</label>
                        <div class="mt-2">
                            <input type="datetime-local" @bind-value="@newShift.startTime"  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 form-control" />
                        </div>
                    </div>
                    <div class="sm:col-span-2">
                     
                        <label for="endTime" class="block text-sm font-medium leading-6 text-gray-900">Sluttidspunkt</label>
                        <div class="mt-2">
                            <input type="datetime-local" @bind-value="newShift.endTime"  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 form-control" />
                        </div>
                       
                    </div>
                    <div class="sm:col-span-">

                        <div class="mt-2">
                            <button @onclick="()=> CalculateDuration()"> Beregn varighed</button>
                            <label for="duration" class="block text-sm font-medium leading-6 text-gray-900">Vagtens varighed:</label>
                           <input type="text" @bind="newShift.Duration">Duration </input>
                        </div>
                        <ValidationSummary />
                    </div>
                    <div class="col-span-4">
                        
                        <label for="description" class="block text-sm font-medium leading-6 text-gray-900">Beskrivelse</label>
                        <div class="mt-2">
                            <InputTextArea @bind-Value="newShift.Description" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6 form-control" />
                        </div>
                    </div>
                    <div class="col-span-1">
                       
                        <p>@resultMessage</p>
                        <div class="mt-2">
                          <td><button type="submit" @onclick="() => HandleValidSubmit()"  class="block rounded-md bg-indigo-600 px-3 py-4 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"> Opret vagt!</button></td>
                        </div>
                    </div>
                 </div>
                            
            </div>
        </EditForm>
    </ModalContent>
</div>


@code{
    [CascadingParameter] 
    public IModalService Modal { get; set; } = default!;
    private Shift newShift { get; set; } = new Shift();
    private EditContext editContext; 
    private string resultMessage { get; set; }
    private bool shiftCreated = false;
    private double totalHours { get; set; } 
    private string dateErrorMessage { get; set; }

    private DateTime StartDate { get; set; } = DateTime.Now;
    private DateTime EndDate { get; set; } = DateTime.Now;



    List<string> shiftTypes = new List<string> { "Barvagt", "Toiletvagt", "Indgang", 
    "Sikkerhedsvagt", "Køkkenvagt", "Parkeringsvagt", "Samaritan" };
    Dictionary<string, List<string>> shiftFunctionsAndRoles = new Dictionary<string, List<string>>
{
    { "Barvagt", new List<string> { "Bartender", "Oprydder" } },
    { "Toiletvagt", new List<string> { "Oprydder/rengøring" } },
    { "Indgangsvagtt", new List<string> { "Billetør", "Assistent" } },
    { "Sikkerhedsvagt", new List<string> { "Sikkerhedsvagt", "Sikkerhedsassistent" } },
    { "Køkkenvagt", new List<string> { "Kok", "Servering", "Oprydning" } },
    { "Parkering", new List<string> { "Vagt", "Assistent" } },
    { "Samaritan", new List<string> { "Førsthjælper", "Oprydning", "Sygeplejerske" } }
};

    Dictionary<string, List<string>> areaTypesAndLocations = new Dictionary<string, List<string>>
{
    { "Bar", new List<string> { "The Crazy bar", "The Slow but fast bar", "Fontenen" } },
    { "Mad/drikke", new List<string> { "Snackbar", "Foodcourt" } },
    { "Sceneområde", new List<string> { "Store scene", "Lille scene" } },
    { "Indgang", new List<string> { "Indgang Vest" } },
    { "Toiletter", new List<string> { "Toilet øst", "Toilet vest" } },
    { "Parkering", new List<string> { "Parkering 1", "Parkering 2" } },
    { "Samaritan", new List<string> { "Samaritan nord" } }
};




    //Method that creates an instance of edicContext taking the nedShift-object as parameter. And setting default time for input-date-field to today. 
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("OnInitialized in dialog");
        editContext = new EditContext(newShift);

        // Setting default value for start and endtime in calendar 
        newShift.startTime = DateTime.Today;
        newShift.endTime = DateTime.Today;

    }


    //Method that when form is submittet validets the form content, and if valid calls the CreateShiftmethod. 
    public async Task HandleValidSubmit()
    {
        if (editContext.Validate())
        {
            await CreateShift(newShift);
            if (shiftCreated == true)
            {
                //Clearing the form by setting newShift value to a  new shift 
                newShift = new Shift();
            }
        }
    }

    //Method that checks if endtime is after startrtime, and calculates the duration between start and endtime. 
    public void CalculateDuration()
    {
        if (newShift.endTime > newShift.startTime)
        {
            TimeSpan duration = newShift.endTime - newShift.startTime;
            newShift.Duration = (int)duration.TotalHours;
            StateHasChanged();
        }
        else
        {
            dateErrorMessage = "Sluttidspunkt skal være efter starttidspunkt";
        }
    }



    //Method that creates shift, by service sending a httpPost request. If the response "createdShift" is not null
    private async Task CreateShift(Shift newShift)
    {
        Console.WriteLine("Creating shift");
        try
        {
            // Call the shiftService to use createshift method 
            var result = await shiftService.CreateShift(newShift);
            
            if (result != null)
            {
                Console.WriteLine("Shift addedd Successfully");
                resultMessage = "Vellykket oprættelse af vagt";
                shiftCreated = true;
            }
        }
        catch (Exception ex)
        {
            resultMessage = ex.Message;
            Console.WriteLine("Error: " + ex.Message);
        }
    }
}
