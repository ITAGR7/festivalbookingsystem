@page "/AvailableShifts"
@using Festivalproject.Shared.Models
@using Festivalproject.Client.Components
@using Blazored.Modal.Services


@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject IModalService ModalService


<h3>AvailableShifts</h3>

<div id="calendar"></div>

@code {
    
    private List<Shift> AvailableShift { get; set; } = new List<Shift>();

    protected override async Task OnInitializedAsync()
    {
        AvailableShift = await Http.GetFromJsonAsync<List<Shift>>("https://localhost:7251/api/Shift/false");
        
    // Create a DotNetObjectReference to pass to JavaScript
        var dotNetReference = DotNetObjectReference.Create(this);

    // Convert the list of shifts to an array of events thats later passed over to the js function
        var events = AvailableShift.Select(s => new
        {
    //Setting the properties of the event object -> ex. title = name of the shift...
            title = s.Name,
            start = s.startTime.ToString("s"),
            end = s.endTime.ToString("s"),
            description = s.Description,
    //to array conversion
        }).ToArray();

    //importing the js file from "wwwroot/js" and calling the initializeCalendar function with the events array as parameters
        var module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/fullcalender.js");
        await module.InvokeVoidAsync("initializeCalendar", new object[] { events, dotNetReference });
    }
    
    [JSInvokable]
    public async Task ShiftsDialog(string shiftName)
    {
        var options = new ModalOptions { Size = ModalSize.Small };
        var parameters = new ModalParameters();
        parameters.Add("ModalTitle", shiftName);

        var dialog = ModalService.Show<ShiftsDialog>("Shift Dialog", parameters, options);
        var result = await dialog.Result;
    }
}