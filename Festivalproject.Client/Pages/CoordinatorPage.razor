@page "/coordinator"
@using Blazored.Modal.Services
@using Festivalproject.Client.Components
@using Festivalproject.Client.Services
@using Festivalproject.Shared.Models

@inject HttpClient Http;
@inject IUserService userService;
@inject IShiftService shiftService;
@inject IShiftRegistrationService shiftRegistrationService; 
@inject NavigationManager navManager; 
@inject IModalService modalService;


<!-- Using Tailwind.css library with utility classes, rather than css-behind-file for easier editing->
!-- Implementing header with image at top of userprofile page  -->
<!-- Using Tailwind.css library with utility classes, rather than css-behind-file for easier editing-->
<!-- Implementing header with image at top of userprofile page  -->

<div>
    <div>
        <img class="h-48 w-full object-cover lg:h-48" src="/confettiHeader.jpg" alt="">
    </div>
    <div class="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
        <div class="-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5">
            <div class="flex">
                <img class="h-24 w-24 rounded-full ring-4 ring-white sm:h-32 sm:w-32" src="/ProfileHead.png" alt="">
            </div>
            <div class="mt-6 sm:flex sm:min-w-0 sm:flex-1 sm:items-center sm:justify-end sm:space-x-6 sm:pb-1">
                <div class="mt-6 min-w-0 flex-1 sm:hidden md:block">
                    <h1 class="truncate text-2xl font-bold text-gray-900">@user.FirstName @user.SurName</h1>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Adding a containter that centers everything inside the this div -->
<div class="sm:container sm:mx-auto">
    <h4 class="mt-24 text-3xl"> Velkommen @user.FirstName! </h4>
    <h3 class="mt-8  text-lg text-gray-700">Her kan du se dine oplysninger, se alle vagter og deres status, samt oprette nye vagter!</h3>
    
    @if (!EditModeUser)
    {
   
        <div class="px-4 sm:px-6 lg:px-64">
            <div class="sm:flex sm:items-center">
                <h4 class="mt-5 mb-8 text-2xl"> Dine oplysninger </h4>
                <div class="sm:flex-auto">
                </div>
                <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                    <button type="button" @onclick="EditUserInfo" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Rediger oplysninger</button>
                </div>
            </div>
            <div class="mt-8 flow-root">
                <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead>
                            <tr>
                                <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8">Navn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Efternavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Adresse</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">By</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Postnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Telefonnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Brugernavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Epost</th>
                                <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 lg:pr-8">
                                </th>
                            </tr>
                            </thead>
                          
                            <tbody class="divide-y divide-gray-200 bg-white">
                            <tr>
                                <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-500 sm:pl-6 lg:pl-8">@user.FirstName</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.SurName</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Address</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.City</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Zip</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.PhoneNumber</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.UserName</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Email</td>
                                <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 lg:pr-8">
                                </td>
                            </tr>
                            </tbody>
                            
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="px-4 sm:px-6 lg:px-8">
             <EditForm Model="@userUpdated" OnValidSubmit="HandleValidSubmit">
               <DataAnnotationsValidator />
               
            <div class="sm:flex sm:items-center">
                <div class="sm:flex-auto">
                </div>
                <div class="mt-4 mb-24 sm:ml-16 sm:mt-0 sm:flex-none">
                    <button type="submit" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Gem ændringer</button>
                </div>
            </div>
            <div class="mt-8 flow-root">
                <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle">
                        <table class="min-w-full divide-y divide-gray-300">
                            <thead>
                                    <ValidationSummary />
                            <tr>
                                <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8">Navn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Efternavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Adresse</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">By</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Postnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Telefonnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Brugernavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Epost</th>
                                <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 lg:pr-8">

                                </th>
                            </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200 bg-white">
                                    
                            <tr>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputText  @bind-Value="@userUpdated.FirstName"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputText  @bind-Value="@userUpdated.SurName"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputText type="text" @bind-Value="@userUpdated.Address"/> </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputText type="text" @bind-Value="@userUpdated.City"/>
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                     <InputNumber TValue="int" @bind-Value="@userUpdated.Zip" />
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputNumber TValue="int" @bind-Value="@userUpdated.PhoneNumber"/>
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputText type="text" @bind-Value="@userUpdated.UserName"/>
                                </td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                    <InputText type="text" @bind-Value="@userUpdated.Email"/>
                                </td>
                                <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 lg:pr-8">
                                </td>
                            </tr>
                            </tbody>
                            
                        </table>
                    </div>
                </div>
            </div>
            </EditForm>
        </div>
    }
  
</div>


<div class="sm:container sm:mx-auto">
<h4 class="mt-16 text-2xl"> Alle vagter </h4>
<div class="row">
    <div class="row mt-4 tableHeadInfo">
        <div class="col-md-3">
           <div class="mb-3"> <input type="text" class="form-control" placeholder="Søg efter vagtnavn" @bind="SearchInput" @oninput="FilterShifts">
          </div>
                <select id="dropdown" @oninput="FilterStatusList"
                        name="dropdown" class="form-select">
                    @foreach (var option in DropdownOptions)
                    {
                        <option value="@option"> @option</option>
                    }
                </select>
        </div>

        <div class="col-md-3 vagtBox">
            <div>
                <p class="LedigeSkrift white-text">Ledige vagter: @availableShifts</p>
            </div>
            <div>
                <p class="OptagetSkrift white-text">Optagede vagter: @occupiedShifts</p>
            </div>
        </div>
    </div>

    @if (!EditModeShift)
    {
        <div class="px-4 sm:px-6 lg:px-32">
            <div class="row mt-4">
                <div class="col-md-3"></div>
                <div class="col-md-3"></div>
                <div class="col-md-3 ButtonsBox">
                    <button type="button" @onclick="() => EnableShiftEditMode()" class="block rounded-md bg-indigo-600 px-3 py-2 mr-0 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Rediger vagter</button>
                    <button type="button" @onclick="() => ShowCreateShiftDialog()" class="block rounded-md bg-indigo-600 px-6 py-2 ml-12 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Opret ny vagt</button>
                </div>
            </div>
            <div class="mt-4 flow-root">
                <div class="-mx-4 -my-2 sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle">
                        <table class="min-w-full border-separate border-spacing-0">
                            <thead>
                            <tr>
                                <th scope="col" class=" sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter  lg:pl-8">Vagtnavn</th>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter  lg:pl-0">Beskrivelse</th>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter  lg:pl-8">Starttidspunkt</th>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter  lg:pl-8">Sluttidspunkt</th>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter  lg:pl-8">Varighed</th>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter lg:pl-8">Type</th>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter lg:pl-8">Område</th>
                                <td scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5   text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter lg:pl-8" @onclick="() => PrioritySort()" style="cursor: pointer">Prioritet ↑↓ </td>
                                <th scope="col" class="sticky  z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5  pr-4 backdrop-blur backdrop-filter sm:pr-6 lg:pr-8"/>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var shift in shiftList)
                            {
                                <tr>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.Name</td>
                                    <td class="max-w-xs whitespace-normal border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.Description</td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.startTime</td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.endTime</td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.Duration</td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.Type</td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">@shift.Area</td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">
                                        <i class="bi @(shift.IsPriority ? "bi-star-fill" : "bi-star")" style="font-size: 2rem; color: cornflowerblue; padding-left: 30px" @onclick="() => UpdatePriority(shift.Id)"></i>
                                    </td>
                                    <td scope="col" class="sticky top-0 z-10 border-b border-gray-200 bg-white bg-opacity-75 py-3.5 pl-3 pr-4 backdrop-blur backdrop-filter sm:pr-6 lg:pr-8"/>

                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="px-4 sm:px-6 lg:px-32">
            <div class="sm:flex sm:items-center">
                <div class="sm:flex-auto">
                </div>
       @*         <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none"></div>*@
            </div>
            <div class="mt-8 flow-root">
                <div class="-mx-4 -my-2 sm:-mx-6 lg:-mx-8">
                    <div class="inline-block min-w-full py-2 align-middle">
                        <table class="min-w-full border-separate border-spacing-0 table-auto">
                            <thead>
                            <tr>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Vagtnavn</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Beskrivelse</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Starttidspunkt</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Sluttidspunkt</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-right text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Varighed</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Type</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter sm:pl-6 lg:pl-8">Område</th>
                                <th scope="col" class="sticky top-0 z-10  border-b border-gray-300 bg-white bg-opacity-75 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter lg:table-cell">Prioritet</th>
                                <th scope="col" class="sticky top-0 z-10 border-b border-gray-300 bg-white bg-opacity-75 py-3.5 pl-3 pr-4 backdrop-blur backdrop-filter sm:pr-6 lg:pr-8"/>
                                <th scope="col" class="sticky top-0 z-10  border-b border-gray-300 bg-white bg-opacity-75 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 backdrop-blur backdrop-filter lg:table-cell"></th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var shift in shiftList)
                            {
                                <tr>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:tabl e-cell">
                                        <input type="text" @bind="shift.Name"/>
                                    </td>
                                    <td class=" max-w-xs whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:tabl e-cell">
                                        <textarea @bind="shift.Description"/>
                                    </td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">
                                        <input type="text" size="10" @bind="shift.startTime"/>
                                    </td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500 lg:table-cell">
                                        <input type="text" size="10" @bind="shift.endTime"/>
                                    </td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-1 text-sm text-center text-gray-500 lg:table-cell">
                                        <input type="text" size="2" @bind="shift.Duration"/>
                                    </td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500">
                                        <input type="text" @bind="shift.Type"/>
                                    </td>
                                    <td class="whitespace-nowrap border-b border-gray-200 px-3 py-4 text-sm text-gray-500">
                                        <input type="text" @bind="shift.Area"/>
                                    </td>
                                    <td class="whitespace-nowrap border-b border-gray-200 hidden px-3 py-4 text-sm text-gray-500 lg:table-cell">
                                        <i class="bi @(shift.IsPriority ? "bi-star-fill" : "bi-star")" style="font-size: 2rem; color: cornflowerblue; padding-left: 10px" @onclick="() => UpdatePriority(shift.Id)"></i>
                                    </td>
                                    <td>
                                        <button type="button" @onclick="() => UpdateShift(shift)" class="block rounded-md bg-indigo-600 px-2 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"> Gem</button>
                                    </td>
                                    <td>
                                        <button type="button" @onclick="() => DeleteShift(shift.Id)" class="block rounded-md bg-indigo-600 px-2 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Slet</button>
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
</div>

@code {


    [CascadingParameter]
    public IModalService Modal { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? id { get; set; }

    private List<User> userList { get; set; } = new();
    private User user { get; set; } = new();
    private User userUpdated { get; set; } = new();
    private User updatedUser { get; set; }

    private bool EditModeShift { get; set; }
    private bool EditModeUser { get; set; }
    private EditContext editContext { get; set; }

    private Shift shiftUpdated { get; set; } = new();
    private List<Shift> shiftList { get; set; } = new();
    private List<Shift> filteredShifts { get; set; } = new();
    private string StatusShift { get; set; } = "";
    private readonly List<string> DropdownOptions = new() { "Alle vagter", "Med frivillig", "Uden frivillig" };
    private bool? dropDownStatus { get; set; } = true;

    public string SearchInput { get; set; } = "";
    public int occupiedShifts { get; set; }
    public int availableShifts { get; set; }
    private List<Shift> occupiedList { get; set; } = new();
    private List<Shift> availableList { get; set; } = new();


    // On pageload method that runs async with other methods - fetches the user by id passed from signin and a list of all shifts 
    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(userUpdated);

        user = await userService.GetUserByObjectId(id);
        shiftList = await shiftService.GetAllShifts();

        filteredShifts = shiftList;

        //fetching required lists to count volunteers on shifts
        occupiedList = await shiftService.GetShiftsByStatus(true);
        availableList = await shiftService.GetShiftsByStatus(false);

        occupiedShifts = occupiedList.Count();
        availableShifts = availableList.Count();
    }


    public async Task HandleValidSubmit()
    {
        if (editContext.Validate())
        {
            await SaveUserInfo();
           
        }
    }

    //Method that shows the createshiftdialog component on page
    public void ShowCreateShiftDialog()
    {
        modalService.Show<CreateShiftDialog>("", new ModalOptions { Size = ModalSize.ExtraLarge });
    }


    //Method setting the bool: "EditMode" to true to show editable mode
    public void EnableShiftEditMode()
    {
        EditModeShift = true;
    }

    //Method that sets boolean to true to show editable mode, and sets the binded inputvalue to value of userobject. 
    public void EditUserInfo()
    {
        EditModeUser = true;
        userUpdated.FirstName = user.FirstName;
        userUpdated.SurName = user.SurName;
        userUpdated.PhoneNumber = user.PhoneNumber;
        userUpdated.Address = user.Address;
        userUpdated.Zip = user.Zip;
        userUpdated.City = user.City;
        userUpdated.UserName = user.UserName;
        userUpdated.Email = user.Email;
        userUpdated.Password = user.Password;
        userUpdated.UserType = user.UserType;
        userUpdated.Id = user.Id;
    }

    //Method that saves the updated userobject in the database and sets boolean to false to hide editable mode
    private async Task SaveUserInfo()
    {
        await userService.UpdateUser(userUpdated);
        updatedUser = await userService.GetUserByObjectId(id);
        EditModeUser = false;
    }


    // Method that passes an updated shift to both shiftrepository and shiftregistationrepository
    //EditMode set to false to "remove" editable mode 
    public async void UpdateShift(Shift shift)
    {
        EditModeShift = false;
        var result = await shiftService.UpdateShift(shift);
        var result2 = await shiftRegistrationService.UpdateShiftRegistrationByShiftId(shift);
    }


    public async Task DeleteShift(string id)
    {
        var response = await shiftService.DeleteShift(id);
        var newList = await shiftService.GetAllShifts();
        shiftList = newList;
    }

    private bool isSortedByPriority;

    public void PrioritySort()
    {
        if (isSortedByPriority)
        {
    // If the list is currently sorted by priority, restore the original unsorted order.
            shiftList = new List<Shift>(filteredShifts);
            isSortedByPriority = false;
        }
        else
        {
    // Sort the list by priority.
            shiftList = shiftList.OrderBy(shift => shift.IsPriority ? 0 : 1).ToList();
            isSortedByPriority = true;
        }
    }


    public void UpdatePriority(string Id)
    {
    // Find the shift with the given ID in the shiftList.
    // If a matching shift is found, its priority status is updated.
        var shift = shiftList.FirstOrDefault(s => s.Id == Id);

    // If the shift is currently marked as priority, it will be unmarked.
    // If the shift is not marked as priority, it will be marked as priority.
        if (shift != null)
        {
            shift.IsPriority = !shift.IsPriority;
        }
    }


    public void FilterShifts(ChangeEventArgs e)
    {
        SearchInput = e.Value.ToString();

        if (string.IsNullOrWhiteSpace(SearchInput))
        {
            shiftList = new List
                <Shift>(filteredShifts);
        }
        else
        {
            shiftList = shiftList.Where(s => s.Name.Contains(SearchInput, StringComparison.OrdinalIgnoreCase)).ToList();
        }
    }


    private void FilterStatusList(ChangeEventArgs e)
    {
        Console.WriteLine(e.Value.ToString());
        StatusShift = e.Value.ToString();
        if (StatusShift == "Uden frivillig")
        {
            shiftList = filteredShifts.Where(s => s.Status == false).ToList();
        }
        else if (StatusShift == "Med frivillig")
        {
            shiftList = filteredShifts.Where(s => s.Status).ToList();
        }
        else
        {
            shiftList = filteredShifts;
        }
    }

}