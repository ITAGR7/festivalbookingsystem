    @page "/volunteer"
    @using Festivalproject.Shared.Models;
    @using Festivalproject.Client.Services;
    @inject IShiftRegistrationService ShiftRegistrationService
    @inject HttpClient Http;
    @inject IUserService userService; 
    @inject NavigationManager navigationManager; 
    @using Festivalproject.Client.Components; 
 


<!-- Implementing header with image at top of userprofile page  -->
<div>
  <div>
    <img class="h-32 w-full object-cover lg:h-48" src="/confettiHeader.jpg" alt="">
  </div>
  <div class="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8">
    <div class="-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5">
      <div class="flex">
        <img class="h-24 w-24 rounded-full ring-4 ring-white sm:h-32 sm:w-32" src="/ProfileHead.png" alt="">
      </div>
      <div class="mt-6 sm:flex sm:min-w-0 sm:flex-1 sm:items-center sm:justify-end sm:space-x-6 sm:pb-1">
        <div class="mt-6 min-w-0 flex-1 sm:hidden md:block">
          <h1 class="truncate text-2xl font-bold text-gray-900">@user.FirstName</h1>
        </div>
        <div class="mt-6 flex flex-col justify-stretch space-y-3 sm:flex-row sm:space-x-4 sm:space-y-0">
          <button type="button" class="inline-flex justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
            <svg class="-ml-0.5 mr-1.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path d="M3 4a2 2 0 00-2 2v1.161l8.441 4.221a1.25 1.25 0 001.118 0L19 7.162V6a2 2 0 00-2-2H3z" />
              <path d="M19 8.839l-7.77 3.885a2.75 2.75 0 01-2.46 0L1 8.839V14a2 2 0 002 2h14a2 2 0 002-2V8.839z" />
            </svg>
          </button>
          <button type="button" class="inline-flex justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50">
            <svg class="-ml-0.5 mr-1.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M2 3.5A1.5 1.5 0 013.5 2h1.148a1.5 1.5 0 011.465 1.175l.716 3.223a1.5 1.5 0 01-1.052 1.767l-.933.267c-.41.117-.643.555-.48.95a11.542 11.542 0 006.254 6.254c.395.163.833-.07.95-.48l.267-.933a1.5 1.5 0 011.767-1.052l3.223.716A1.5 1.5 0 0118 15.352V16.5a1.5 1.5 0 01-1.5 1.5H15c-1.149 0-2.263-.15-3.326-.43A13.022 13.022 0 012.43 8.326 13.019 13.019 0 012 5V3.5z" clip-rule="evenodd" />
            </svg>
          </button>
        </div>
      </div>
    </div>
    <div class="mt-6 hidden min-w-0 flex-1 sm:block md:hidden">
      <h1 class="truncate text-2xl font-bold text-gray-900">@user.FirstName</h1>
    </div>
  </div>
</div>

<div class="sm:container sm:mx-auto">
    <h4 class="mt-24 text-3xl"> Velkommen! </h4>
    <h2 class="mt-8  text-lg text-gray-700">Her kan du se og ændre dine oplysninger, tilmelde dig frivillige-vagter og se de vagter du allerede er tilmeldt!</h2> 
<div class="grid grid-cols-2"></div> 

<h4 class="mt-24  mb-16 text-2xl"> Dine oplysninger </h4>
   


<!-- Adding a table for displyaing userinformation. We are using an If statement as a switch to display either 1) static data  or 2) dynamic editable data using inputfields -->

@if(!EditMode){
<div class="px-4 sm:px-6 lg:px-8">
    <div class="sm:flex sm:items-center">
        <div class="sm:flex-auto">

        </div>
        <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
           <button type="button" @onclick="Edit" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Rediger oplysninger</button>
        </div>
    </div>
    <div class="mt-8 flow-root">
        <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="inline-block min-w-full py-2 align-middle">
                <table class="min-w-full divide-y divide-gray-300">
                    <thead>
                        <tr>
                                <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8">Navn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Efternavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Adresse</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">By</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Postnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Telefonnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Brugernavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Epost</th>
                            <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 lg:pr-8">
     
                            </th>
                        </tr>
                    </thead>
                    <tbody class="divide-y divide-gray-200 bg-white">
                        <tr>
                            <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-500 sm:pl-6 lg:pl-8">@user.FirstName</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.SurName</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Address</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.City</td>
                                 <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Zip</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.PhoneNumber</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.UserName</td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Email</td>
                           <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 lg:pr-8">
 
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    </div>
}
else
{

<div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
            </div>
            <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                <button type="button" @onclick="Save" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Gem ændringer</button>
            </div>
        </div>
        <div class="mt-8 flow-root">
            <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle">
                    <table class="min-w-full divide-y divide-gray-300">
                        <thead>
                            <tr>
                                <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8">Navn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Efternavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Adresse</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">By</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Postnummer</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Telefonnummer</th>
                                          <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Brugernavn</th>
                                <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Epost</th>
                                <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 lg:pr-8">
                           
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 bg-white">
                            <tr>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.FirstName" /></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.SurName"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.Address"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.City"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.Zip"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.PhoneNumber"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.UserName"/></td>
                                <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500"><input type="text" @bind="@userUpdated.Email"/></td>
                                <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 lg:pr-8">
               
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

}

    <div class="mb-40">   

        <h4 class="mt-36 text-2xl">Dine vagter </h4>

        <!-- To avoid overabundance of code in this razorpage, we apply use of partial view. See components folder on client  -->
        <ShiftList Shifts=ShiftRegistrations/>

    </div>

    <button type="button" @onclick="SeeAvailableShifts" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Se ledige vagter</button>
</div>
   

@code {

    // Passing the userobjects ObjectId(BSON) from loginpage to be able to fetch userinformation and shiftregistrations by userId
    [Parameter]
    [SupplyParameterFromQuery]
    public string? id { get; set; }
    private List<User> userList { get; set; } = new List<User>();
    private User user { get; set; } = new User();
    private User userUpdated { get; set; } = new User(); 
    private bool EditMode { get; set; } = false;
    private List<ShiftRegistration> ShiftRegistrations { get; set; } = new List<ShiftRegistration>();




    protected override async Task OnInitializedAsync()
    {

        user = await userService.GetUserByObjectId(id);
        ShiftRegistrations = await ShiftRegistrationService.GetRegisteredShiftsById(id);
        Console.WriteLine(ShiftRegistrations.Count());
    }


    //Method that sets the binded inputvalues for userUpdated to user, which is passed to service in "Save" method 
    private void Edit()
    {

        EditMode = true;
        userUpdated.FirstName = user.FirstName;
        userUpdated.SurName = user.SurName;
        userUpdated.PhoneNumber = user.PhoneNumber; 
        userUpdated.Address = user.Address;
        userUpdated.Zip = user.Zip;
        userUpdated.City = user.City;
        userUpdated.UserName = user.UserName;
        userUpdated.Email = user.Email;
        userUpdated.Password = user.Password;
        userUpdated.UserType = user.UserType;
        userUpdated.Id = user.Id;


    }

    //Method that calls the HttpPut method which updates the changed fields in user-document in the database
    //..and sets user to the updated userObject returned by GetUserByObjectId - method, så the updated information is displayed 
    private async Task Save()
    {
        await userService.UpdateUser(userUpdated);
        user = await userService.GetUserByObjectId(id); 
        EditMode = false;

    }

    private void SeeAvailableShifts()
    {
        navigationManager.NavigateTo("/availableshifts");
    }

      
    

}

