@page "/volunteer"
@using Festivalproject.Shared.Models;
@using Festivalproject.Client.Services;
@inject IShiftRegistrationService ShiftRegistrationService
@inject HttpClient Http;
@inject IUserService userService; 
@inject NavigationManager navigationManager; 
@using Festivalproject.Client.Components;
@using Blazored.Modal.Services;


<h3> Velkommen @user.FirstName</h3>
<p class="mt-4 text-sm text-gray-700">Her kan du se og ændre dine oplysninger, tilmelde dig frivillige-vagter og se de vagter du allerede er tilmeldt!</p>

@if (!EditMode)
{
    <div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">

            </div>
            <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                <button type="button" @onclick="Edit" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Rediger oplysninger</button>
            </div>
        </div>
        <div class="mt-8 flow-root">
            <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle">
                    <table class="min-w-full divide-y divide-gray-300">
                        <thead>
                        <tr>
                            <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8">Navn</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Efternavn</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Adresse</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">By</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Postnummer</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Telefonnummer</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Brugernavn</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Epost</th>
                            <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 lg:pr-8">

                            </th>
                        </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 bg-white">
                        <tr>
                            <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-500 sm:pl-6 lg:pl-8">@user.FirstName</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.SurName</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Address</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.City</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Zip</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.PhoneNumber</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.UserName</td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">@user.Email</td>
                            <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 lg:pr-8">

                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="px-4 sm:px-6 lg:px-8">
        <div class="sm:flex sm:items-center">
            <div class="sm:flex-auto">
            </div>
            <div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
                <button type="button" @onclick="Save" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Gem ændringer</button>
            </div>
        </div>
        <div class="mt-8 flow-root">
            <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div class="inline-block min-w-full py-2 align-middle">
                    <table class="min-w-full divide-y divide-gray-300">
                        <thead>
                        <tr>
                            <th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8">Navn</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Efternavn</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Adresse</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">By</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Postnummer</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Telefonnummer</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Brugernavn</th>
                            <th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900">Epost</th>
                            <th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6 lg:pr-8">

                            </th>
                        </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 bg-white">
                        <tr>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.FirstName"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.SurName"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.Address"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.City"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.Zip"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.PhoneNumber"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.UserName"/>
                            </td>
                            <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
                                <input type="text" @bind="@userUpdated.Email"/>
                            </td>
                            <td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6 lg:pr-8">

                            </td>
                        </tr>

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

<div class="mb-40">

    <h4 class="mt-36 text-2xl">Dine vagter </h4>

    <!-- To avoid overabundance of code in this razorpage, we apply use of partial view. See components folder on client  -->
    <ShiftList Shifts="ShiftRegistrations"/>

</div>

<button type="button" @onclick="NavigateToAvailableShifts" class="block rounded-md bg-indigo-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Se ledige vagter</button>


@code {

    // Passing the userobjects ObjectId(BSON) from loginpage to be able to fetch userinformation and shiftregistrations by userId
    [Parameter]
    [SupplyParameterFromQuery]
    public string? id { get; set; }

    public string? UserId { get; set; }

    private List<User> userList { get; set; } = new();

    private User user { get; set; } = new();

    private User userUpdated { get; set; } = new();


    private bool EditMode { get; set; } = false;

    private List<ShiftRegistration> ShiftRegistrations { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        user = await userService.GetUserByObjectId(id);
        ShiftRegistrations = await ShiftRegistrationService.GetRegisteredShiftsById(id);
        Console.WriteLine(ShiftRegistrations.Count());
    }


    //Method that sets the binded inputvalues for userUpdated to user, which is passed to service in "Save" method 
    private void Edit()
    {
        EditMode = true;
        userUpdated.FirstName = user.FirstName;
        userUpdated.SurName = user.SurName;
        userUpdated.PhoneNumber = user.PhoneNumber;
        userUpdated.Address = user.Address;
        userUpdated.Zip = user.Zip;
        userUpdated.City = user.City;
        userUpdated.UserName = user.UserName;
        userUpdated.Email = user.Email;
        userUpdated.Password = user.Password;
        userUpdated.UserType = user.UserType;
        userUpdated.Id = user.Id;
    }

    //Method that calls the HttpPut method which updates the changed fields in user-document in the database
    //..and sets user to the updated userObject returned by GetUserByObjectId - method, så the updated information is displayed 
    private async Task Save()
    {
        await userService.UpdateUser(userUpdated);
        user = await userService.GetUserByObjectId(id);
        EditMode = false;
    }

    //method that navigates to availableshifts page with userobjectid as parameter
    private void NavigateToAvailableShifts()
    {
        navigationManager.NavigateTo($"/availableshifts?id={id}");
    }

}